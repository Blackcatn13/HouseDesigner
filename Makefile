#############################################################################
# Makefile for building: Thoth
# Generated by qmake (2.01a) (Qt 4.8.4) on: dv. de maig 24 01:51:46 2013
# Project:  Thoth.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile Thoth.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -L/usr/X11R6/lib -lglut -lGLEW -lGLU -lassimp -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Camera.cpp \
		GLWidget.cpp \
		Illumination.cpp \
		main.cpp \
		Model.cpp \
		ModelManager.cpp \
		Point3D.cpp \
		Render.cpp \
		Render2D.cpp \
		Scenary.cpp \
		thothwindow.cpp \
		RenderManager.cpp \
		CameraManager.cpp \
		CameraOrtho.cpp \
		CameraPerspective.cpp \
		ProjectManager.cpp \
		TreeFile.cpp \
		RenderExplorer.cpp \
		CameraFP.cpp \
		TextureManager.cpp \
		Texture.cpp \
		Shadermanager.cpp \
		Plane.cpp \
		FrustrumManager.cpp \
		Vec3.cpp moc_GLWidget.cpp \
		moc_thothwindow.cpp
OBJECTS       = Camera.o \
		GLWidget.o \
		Illumination.o \
		main.o \
		Model.o \
		ModelManager.o \
		Point3D.o \
		Render.o \
		Render2D.o \
		Scenary.o \
		thothwindow.o \
		RenderManager.o \
		CameraManager.o \
		CameraOrtho.o \
		CameraPerspective.o \
		ProjectManager.o \
		TreeFile.o \
		RenderExplorer.o \
		CameraFP.o \
		TextureManager.o \
		Texture.o \
		Shadermanager.o \
		Plane.o \
		FrustrumManager.o \
		Vec3.o \
		moc_GLWidget.o \
		moc_thothwindow.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Thoth.pro
QMAKE_TARGET  = Thoth
DESTDIR       = 
TARGET        = Thoth

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_thothwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: Thoth.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtOpenGL.prl \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile Thoth.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtOpenGL.prl:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile Thoth.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Thoth1.0.0 || $(MKDIR) .tmp/Thoth1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Thoth1.0.0/ && $(COPY_FILE) --parents Camera.h GLWidget.h Illumination.h Model.h ModelManager.h Point3D.h Render.h Render2D.h Scenary.h thotwindow.h Util.h RenderManager.h thothwindow.h CameraManager.h CameraOrtho.h CameraPerspective.h ProjectManager.h TreeFile.h RenderExplorer.h CameraFP.h TextureManager.h Texture.h Shadermanager.h Plane.h FrustrumManager.h Vec3.h .tmp/Thoth1.0.0/ && $(COPY_FILE) --parents Camera.cpp GLWidget.cpp Illumination.cpp main.cpp Model.cpp ModelManager.cpp Point3D.cpp Render.cpp Render2D.cpp Scenary.cpp thothwindow.cpp RenderManager.cpp CameraManager.cpp CameraOrtho.cpp CameraPerspective.cpp ProjectManager.cpp TreeFile.cpp RenderExplorer.cpp CameraFP.cpp TextureManager.cpp Texture.cpp Shadermanager.cpp Plane.cpp FrustrumManager.cpp Vec3.cpp .tmp/Thoth1.0.0/ && $(COPY_FILE) --parents thothwindow.ui .tmp/Thoth1.0.0/ && (cd `dirname .tmp/Thoth1.0.0` && $(TAR) Thoth1.0.0.tar Thoth1.0.0 && $(COMPRESS) Thoth1.0.0.tar) && $(MOVE) `dirname .tmp/Thoth1.0.0`/Thoth1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Thoth1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_GLWidget.cpp moc_thothwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_GLWidget.cpp moc_thothwindow.cpp
moc_GLWidget.cpp: Util.h \
		Point3D.h \
		Render.h \
		GLWidget.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) GLWidget.h -o moc_GLWidget.cpp

moc_thothwindow.cpp: TreeFile.h \
		thothwindow.h \
		ui_thothwindow.h \
		thothwindow.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) thothwindow.h -o moc_thothwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_thothwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_thothwindow.h
ui_thothwindow.h: thothwindow.ui \
		GLWidget.h \
		Util.h \
		Point3D.h \
		Render.h
	/usr/lib/i386-linux-gnu/qt4/bin/uic thothwindow.ui -o ui_thothwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

Camera.o: Camera.cpp Camera.h \
		Util.h \
		Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Camera.o Camera.cpp

GLWidget.o: GLWidget.cpp GLWidget.h \
		Util.h \
		Point3D.h \
		Render.h \
		Scenary.h \
		Render2D.h \
		RenderManager.h \
		CameraManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLWidget.o GLWidget.cpp

Illumination.o: Illumination.cpp Illumination.h \
		Util.h \
		Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Illumination.o Illumination.cpp

main.o: main.cpp thothwindow.h \
		TreeFile.h \
		ui_thothwindow.h \
		Util.h \
		Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Model.o: Model.cpp Model.h \
		Util.h \
		Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Model.o Model.cpp

ModelManager.o: ModelManager.cpp ModelManager.h \
		Util.h \
		Point3D.h \
		Model.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ModelManager.o ModelManager.cpp

Point3D.o: Point3D.cpp Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Point3D.o Point3D.cpp

Render.o: Render.cpp Render.h \
		Util.h \
		Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Render.o Render.cpp

Render2D.o: Render2D.cpp Render2D.h \
		Util.h \
		Point3D.h \
		Render.h \
		Scenary.h \
		CameraManager.h \
		Camera.h \
		ModelManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Render2D.o Render2D.cpp

Scenary.o: Scenary.cpp Scenary.h \
		Util.h \
		Point3D.h \
		ModelManager.h \
		CameraManager.h \
		Camera.h \
		CameraFP.h \
		Plane.h \
		FrustrumManager.h \
		CameraOrtho.h \
		CameraPerspective.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Scenary.o Scenary.cpp

thothwindow.o: thothwindow.cpp thothwindow.h \
		TreeFile.h \
		ui_thothwindow.h \
		Scenary.h \
		Util.h \
		Point3D.h \
		ProjectManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o thothwindow.o thothwindow.cpp

RenderManager.o: RenderManager.cpp RenderManager.h \
		Util.h \
		Point3D.h \
		Render.h \
		Render2D.h \
		RenderExplorer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RenderManager.o RenderManager.cpp

CameraManager.o: CameraManager.cpp CameraManager.h \
		Util.h \
		Point3D.h \
		CameraPerspective.h \
		Camera.h \
		CameraOrtho.h \
		CameraFP.h \
		Plane.h \
		FrustrumManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CameraManager.o CameraManager.cpp

CameraOrtho.o: CameraOrtho.cpp CameraOrtho.h \
		Util.h \
		Point3D.h \
		Camera.h \
		Scenary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CameraOrtho.o CameraOrtho.cpp

CameraPerspective.o: CameraPerspective.cpp CameraPerspective.h \
		Util.h \
		Point3D.h \
		Camera.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CameraPerspective.o CameraPerspective.cpp

ProjectManager.o: ProjectManager.cpp Scenary.h \
		Util.h \
		Point3D.h \
		ProjectManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ProjectManager.o ProjectManager.cpp

TreeFile.o: TreeFile.cpp TreeFile.h \
		thothwindow.h \
		ui_thothwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TreeFile.o TreeFile.cpp

RenderExplorer.o: RenderExplorer.cpp RenderExplorer.h \
		Util.h \
		Point3D.h \
		Render.h \
		Scenary.h \
		CameraManager.h \
		Camera.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RenderExplorer.o RenderExplorer.cpp

CameraFP.o: CameraFP.cpp CameraFP.h \
		Util.h \
		Point3D.h \
		Camera.h \
		Plane.h \
		FrustrumManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CameraFP.o CameraFP.cpp

TextureManager.o: TextureManager.cpp TextureManager.h \
		Util.h \
		Point3D.h \
		Texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TextureManager.o TextureManager.cpp

Texture.o: Texture.cpp Texture.h \
		Util.h \
		Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Texture.o Texture.cpp

Shadermanager.o: Shadermanager.cpp Shadermanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Shadermanager.o Shadermanager.cpp

Plane.o: Plane.cpp Plane.h \
		Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Plane.o Plane.cpp

FrustrumManager.o: FrustrumManager.cpp FrustrumManager.h \
		Plane.h \
		Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FrustrumManager.o FrustrumManager.cpp

Vec3.o: Vec3.cpp Vec3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Vec3.o Vec3.cpp

moc_GLWidget.o: moc_GLWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GLWidget.o moc_GLWidget.cpp

moc_thothwindow.o: moc_thothwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_thothwindow.o moc_thothwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

